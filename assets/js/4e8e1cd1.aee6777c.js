"use strict";(self.webpackChunkng_docs=self.webpackChunkng_docs||[]).push([[957],{3905:(e,a,r)=>{r.d(a,{Zo:()=>d,kt:()=>v});var n=r(7294);function o(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){o(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function t(e,a){if(null==e)return{};var r,n,o=function(e,a){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||(o[r]=e[r]);return o}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),m=function(e){var a=n.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},d=function(e){var a=m(e.components);return n.createElement(s.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=t(e,["components","mdxType","originalType","parentName"]),u=m(r),p=o,v=u["".concat(s,".").concat(p)]||u[p]||c[p]||i;return r?n.createElement(v,l(l({ref:a},d),{},{components:r})):n.createElement(v,l({ref:a},d))}));function v(e,a){var r=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=p;var t={};for(var s in a)hasOwnProperty.call(a,s)&&(t[s]=a[s]);t.originalType=e,t[u]="string"==typeof e?e:o,l[1]=t;for(var m=2;m<i;m++)l[m]=r[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5259:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>m});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:2},l="Formularios",t={unversionedId:"dev-guide/forms",id:"dev-guide/forms",title:"Formularios",description:"Los formularios son una parte esencial de las aplicaciones web, y Angular ofrece un sistema robusto para trabajar con ellos. Esta gu\xeda proporciona una visi\xf3n general de los formularios en Angular, abordando conceptos clave y estrategias para gestionar la entrada de datos de los usuarios.",source:"@site/docs/dev-guide/forms.md",sourceDirName:"dev-guide",slug:"/dev-guide/forms",permalink:"/angular-docs/docs/dev-guide/forms",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Routing en Angular",permalink:"/angular-docs/docs/dev-guide/routing"},next:{title:"Servicios",permalink:"/angular-docs/docs/dev-guide/services"}},s={},m=[{value:"Tipos de Formularios en Angular",id:"tipos-de-formularios-en-angular",level:2},{value:"Formularios Reactivos",id:"formularios-reactivos",level:2},{value:"Validaci\xf3n de Formularios Reactivos",id:"validaci\xf3n-de-formularios-reactivos",level:2},{value:"Creaci\xf3n de un Formulario Reactivo con Validaci\xf3n",id:"creaci\xf3n-de-un-formulario-reactivo-con-validaci\xf3n",level:3},{value:"Mostrar Mensajes de Error en la Plantilla",id:"mostrar-mensajes-de-error-en-la-plantilla",level:3},{value:"Validaci\xf3n Din\xe1mica en la Plantilla",id:"validaci\xf3n-din\xe1mica-en-la-plantilla",level:3},{value:"Formularios Basados en Plantillas",id:"formularios-basados-en-plantillas",level:2},{value:"Validaci\xf3n de Formularios Basados en Plantillas",id:"validaci\xf3n-de-formularios-basados-en-plantillas",level:2},{value:"Directivas de Validaci\xf3n",id:"directivas-de-validaci\xf3n",level:3},{value:"Clases CSS de Validaci\xf3n",id:"clases-css-de-validaci\xf3n",level:3},{value:"Validaci\xf3n Din\xe1mica en la Plantilla",id:"validaci\xf3n-din\xe1mica-en-la-plantilla-1",level:3},{value:"Combinando Formularios Reactivos y Basados en Plantillas",id:"combinando-formularios-reactivos-y-basados-en-plantillas",level:2}],d={toc:m},u="wrapper";function c(e){let{components:a,...r}=e;return(0,o.kt)(u,(0,n.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"formularios"},"Formularios"),(0,o.kt)("p",null,"Los formularios son una parte esencial de las aplicaciones web, y Angular ofrece un sistema robusto para trabajar con ellos. Esta gu\xeda proporciona una visi\xf3n general de los formularios en Angular, abordando conceptos clave y estrategias para gestionar la entrada de datos de los usuarios."),(0,o.kt)("h2",{id:"tipos-de-formularios-en-angular"},"Tipos de Formularios en Angular"),(0,o.kt)("p",null,"Angular admite dos tipos de formularios:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Formularios Reactivos:")," Estos formularios se construyen program\xe1ticamente utilizando clases de TypeScript. Proporcionan una forma m\xe1s flexible y din\xe1mica de gestionar la entrada de datos.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Formularios Basados en Plantillas:")," Estos formularios se construyen utilizando directivas de Angular en el HTML. Son m\xe1s adecuados para formularios simples y siguen un enfoque m\xe1s declarativo."))),(0,o.kt)("h2",{id:"formularios-reactivos"},"Formularios Reactivos"),(0,o.kt)("p",null,"Los formularios reactivos est\xe1n basados en el modelo de programaci\xf3n reactivo y son construidos con clases TypeScript. Algunos conceptos clave incluyen:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"FormGroup:")," Representa un grupo de controles, como un formulario."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { FormGroup, FormControl } from '@angular/forms';\n\nconst formulario = new FormGroup({\n  nombre: new FormControl(''),\n  email: new FormControl(''),\n});\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"FormControl:")," Representa un control individual dentro de un formulario."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { FormControl } from '@angular/forms';\n\nconst nombreControl = new FormControl('John Doe');\n")))),(0,o.kt)("h2",{id:"validaci\xf3n-de-formularios-reactivos"},"Validaci\xf3n de Formularios Reactivos"),(0,o.kt)("p",null,"La validaci\xf3n de formularios reactivos en Angular se realiza utilizando clases TypeScript y Validators."),(0,o.kt)("h3",{id:"creaci\xf3n-de-un-formulario-reactivo-con-validaci\xf3n"},"Creaci\xf3n de un Formulario Reactivo con Validaci\xf3n"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { FormGroup, FormControl, Validators } from '@angular/forms';\n\nconst formulario = new FormGroup({\n  nombre: new FormControl('', [Validators.required, Validators.minLength(3)]),\n  email: new FormControl('', [Validators.required, Validators.email]),\n});\n")),(0,o.kt)("p",null,"En este ejemplo, el campo ",(0,o.kt)("inlineCode",{parentName:"p"},"nombre")," es requerido y debe tener una longitud m\xednima de 3 caracteres, mientras que el campo ",(0,o.kt)("inlineCode",{parentName:"p"},"email")," debe ser un correo electr\xf3nico v\xe1lido."),(0,o.kt)("h3",{id:"mostrar-mensajes-de-error-en-la-plantilla"},"Mostrar Mensajes de Error en la Plantilla"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<form [formGroup]=\"formulario\">\n  <input formControlName=\"nombre\">\n  <div *ngIf=\"formulario.get('nombre').hasError('required')\">\n    El nombre es obligatorio.\n  </div>\n  <div *ngIf=\"formulario.get('nombre').hasError('minlength')\">\n    El nombre debe tener al menos 3 caracteres.\n  </div>\n  \n  <input formControlName=\"email\">\n  <div *ngIf=\"formulario.get('email').hasError('required')\">\n    El correo electr\xf3nico es obligatorio.\n  </div>\n  <div *ngIf=\"formulario.get('email').hasError('email')\">\n    El correo electr\xf3nico debe ser v\xe1lido.\n  </div>\n</form>\n")),(0,o.kt)("h3",{id:"validaci\xf3n-din\xe1mica-en-la-plantilla"},"Validaci\xf3n Din\xe1mica en la Plantilla"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<input formControlName=\"nombre\">\n<div *ngIf=\"formulario.get('nombre').invalid && (formulario.get('nombre').dirty || formulario.get('nombre').touched)\">\n  <div *ngIf=\"formulario.get('nombre').hasError('required')\">\n    El nombre es obligatorio.\n  </div>\n  <div *ngIf=\"formulario.get('nombre').hasError('minlength')\">\n    El nombre debe tener al menos 3 caracteres.\n  </div>\n</div>\n")),(0,o.kt)("p",null,"En este ejemplo, los mensajes de error se muestran solo si el campo ha sido tocado o modificado."),(0,o.kt)("h2",{id:"formularios-basados-en-plantillas"},"Formularios Basados en Plantillas"),(0,o.kt)("p",null,"Los formularios basados en plantillas utilizan directivas de Angular dentro del HTML para manejar la entrada del usuario. Algunos conceptos clave incluyen:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ngForm y ngModel:")," Directivas que ayudan a establecer enlaces bidireccionales entre los campos del formulario y el modelo."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<form #miFormulario="ngForm">\n  <input name="nombre" ngModel>\n  <input name="email" ngModel>\n</form>\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Directivas de Validaci\xf3n:")," Directivas como ",(0,o.kt)("inlineCode",{parentName:"p"},"ngRequired")," o ",(0,o.kt)("inlineCode",{parentName:"p"},"ngMinlength")," para validar campos."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<input name="nombre" ngModel required minlength="3">\n')))),(0,o.kt)("h2",{id:"validaci\xf3n-de-formularios-basados-en-plantillas"},"Validaci\xf3n de Formularios Basados en Plantillas"),(0,o.kt)("p",null,"La validaci\xf3n de formularios basados en plantillas en Angular se realiza utilizando directivas especiales y clases CSS."),(0,o.kt)("h3",{id:"directivas-de-validaci\xf3n"},"Directivas de Validaci\xf3n"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<input name="nombre" ngModel required minlength="3">\n<div *ngIf="nombre.invalid && (nombre.dirty || nombre.touched)">\n  <div *ngIf="nombre.hasError(\'required\')">\n    El nombre es obligatorio.\n  </div>\n  <div *ngIf="nombre.hasError(\'minlength\')">\n    El nombre debe tener al menos 3 caracteres.\n  </div>\n</div>\n\n<input name="email" ngModel required email>\n<div *ngIf="email.invalid && (email.dirty || email.touched)">\n  <div *ngIf="email.hasError(\'required\')">\n    El correo electr\xf3nico es obligatorio.\n  </div>\n  <div *ngIf="email.hasError(\'email\')">\n    El correo electr\xf3nico debe ser v\xe1lido.\n  </div>\n</div>\n')),(0,o.kt)("p",null,"En este ejemplo, las directivas ",(0,o.kt)("inlineCode",{parentName:"p"},"required")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"minlength")," se utilizan para especificar los requisitos de validaci\xf3n."),(0,o.kt)("h3",{id:"clases-css-de-validaci\xf3n"},"Clases CSS de Validaci\xf3n"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<input name="nombre" ngModel required minlength="3" [class.is-invalid]="nombre.invalid && (nombre.dirty || nombre.touched)">\n<div *ngIf="nombre.invalid && (nombre.dirty || nombre.touched)">\n  <div *ngIf="nombre.hasError(\'required\')">\n    El nombre es obligatorio.\n  </div>\n  <div *ngIf="nombre.hasError(\'minlength\')">\n    El nombre debe tener al menos 3 caracteres.\n  </div>\n</div>\n')),(0,o.kt)("h3",{id:"validaci\xf3n-din\xe1mica-en-la-plantilla-1"},"Validaci\xf3n Din\xe1mica en la Plantilla"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<input name="nombre" ngModel required minlength="3" [ngClass]="{\'is-invalid\': nombre.invalid && (nombre.dirty || nombre.touched)}">\n<div *ngIf="nombre.invalid && (nombre.dirty || nombre.touched)">\n  <div *ngIf="nombre.hasError(\'required\')">\n    El nombre es obligatorio.\n  </div>\n  <div *ngIf="nombre.hasError(\'minlength\')">\n    El nombre debe tener al menos 3 caracteres.\n  </div>\n</div>\n')),(0,o.kt)("h2",{id:"combinando-formularios-reactivos-y-basados-en-plantillas"},"Combinando Formularios Reactivos y Basados en Plantillas"),(0,o.kt)("p",null,"Angular permite combinar formularios reactivos y basados en plantillas para aprovechar lo mejor de ambos enfoques."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Directiva ngForm para Formularios Reactivos:")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<form [formGroup]="formularioReactivo" (ngSubmit)="submitForm()">\n  <input formControlName="nombre">\n  <input formControlName="email">\n</form>\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Utilizando ngModel con Formularios Reactivos:")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<form [formGroup]="formularioReactivo" (ngSubmit)="submitForm()">\n  <input formControlName="nombre" [(ngModel)]="modelo.nombre">\n  <input formControlName="email" [(ngModel)]="modelo.email">\n</form>\n')))),(0,o.kt)("p",null,"Para obtener informaci\xf3n m\xe1s detallada y avanzada, consulta la ",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/guide/forms-overview"},"documentaci\xf3n oficial de Angular sobre formularios"),". \xa1Optimiza la gesti\xf3n de formularios en tus aplicaciones Angular!"))}c.isMDXComponent=!0}}]);