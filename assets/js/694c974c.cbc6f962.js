"use strict";(self.webpackChunkng_docs=self.webpackChunkng_docs||[]).push([[808],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>g});var t=a(7294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=l,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return a?t.createElement(g,i(i({ref:n},d),{},{components:a})):t.createElement(g,i({ref:n},d))}));function g(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4147:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=a(7462),l=(a(7294),a(3905));const r={sidebar_position:3},i="Templates",o={unversionedId:"understanding-angular/templates",id:"understanding-angular/templates",title:"Templates",description:"En Angular, las plantillas son fundamentales para la creaci\xf3n de interfaces de usuario din\xe1micas. La sintaxis de las plantillas proporciona un conjunto de reglas y expresiones que permiten interactuar con los componentes y mostrar datos en la interfaz de usuario.",source:"@site/docs/understanding-angular/templates.md",sourceDirName:"understanding-angular",slug:"/understanding-angular/templates",permalink:"/angular-docs/docs/understanding-angular/templates",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"M\xf3dulos",permalink:"/angular-docs/docs/understanding-angular/modules"},next:{title:"Directivas",permalink:"/angular-docs/docs/understanding-angular/directives"}},s={},p=[{value:"Expresiones en Plantillas",id:"expresiones-en-plantillas",level:2},{value:"Eventos en Plantillas",id:"eventos-en-plantillas",level:2},{value:"Enlace de Propiedades",id:"enlace-de-propiedades",level:2},{value:"Pipes",id:"pipes",level:2},{value:"Two-Way Binding",id:"two-way-binding",level:2}],d={toc:p},c="wrapper";function u(e){let{components:n,...a}=e;return(0,l.kt)(c,(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"templates"},"Templates"),(0,l.kt)("h1",{id:"sintaxis-de-plantillas-en-angular"},"Sintaxis de Plantillas en Angular"),(0,l.kt)("p",null,"En Angular, las plantillas son fundamentales para la creaci\xf3n de interfaces de usuario din\xe1micas. La sintaxis de las plantillas proporciona un conjunto de reglas y expresiones que permiten interactuar con los componentes y mostrar datos en la interfaz de usuario."),(0,l.kt)("h2",{id:"expresiones-en-plantillas"},"Expresiones en Plantillas"),(0,l.kt)("p",null,"Las expresiones en las plantillas de Angular se encierran entre dobles llaves ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ }}"),". Estas expresiones son evaluadas y el resultado se muestra en el DOM. Por ejemplo:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<p>{{ mensaje }}</p>\n")),(0,l.kt)("p",null,"Aqu\xed, la expresi\xf3n ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ mensaje }}")," ser\xe1 reemplazada por el valor de la propiedad ",(0,l.kt)("inlineCode",{parentName:"p"},"mensaje")," en el componente asociado."),(0,l.kt)("h2",{id:"eventos-en-plantillas"},"Eventos en Plantillas"),(0,l.kt)("p",null,"Los eventos se manejan en las plantillas mediante par\xe9ntesis ",(0,l.kt)("inlineCode",{parentName:"p"},"( )"),". Puedes llamar a m\xe9todos del componente cuando ocurren eventos."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Llamando al m\xe9todo handleClick cuando se hace clic en el bot\xf3n --\x3e\n<button (click)="handleClick()">Haz clic</button>\n')),(0,l.kt)("h2",{id:"enlace-de-propiedades"},"Enlace de Propiedades"),(0,l.kt)("p",null,"El enlace de propiedades permite la actualizaci\xf3n bidireccional entre la vista y el modelo. Utiliza corchetes ",(0,l.kt)("inlineCode",{parentName:"p"},"[]")," para enlazar propiedades del componente con propiedades de elementos del DOM."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- Enlazando la propiedad 'valor' del componente con el valor del input --\x3e\n<input [value]=\"valor\" />\n")),(0,l.kt)("h2",{id:"pipes"},"Pipes"),(0,l.kt)("p",null,"Los pipes permiten transformar visualmente los datos antes de mostrarlos en la interfaz de usuario. Angular proporciona pipes integrados y la capacidad de crear pipes personalizados."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- Utilizando el pipe 'uppercase' para mostrar el texto en may\xfasculas --\x3e\n<p>{{ texto | uppercase }}</p>\n")),(0,l.kt)("h2",{id:"two-way-binding"},"Two-Way Binding"),(0,l.kt)("p",null,"El two-way binding combina la vinculaci\xf3n de propiedades y eventos en un solo enlace. Utiliza la directiva ",(0,l.kt)("inlineCode",{parentName:"p"},"[(ngModel)]")," para lograr la actualizaci\xf3n bidireccional."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Two-way binding con [(ngModel)] --\x3e\n<input [(ngModel)]="nombre" />\n')),(0,l.kt)("p",null,"Estas son solo algunas de las caracter\xedsticas b\xe1sicas de la sintaxis de plantillas en Angular. Para obtener informaci\xf3n m\xe1s detallada y avanzada, consulta la ",(0,l.kt)("a",{parentName:"p",href:"https://angular.io/guide/template-syntax"},"documentaci\xf3n oficial de Angular sobre sintaxis de plantillas"),"."))}u.isMDXComponent=!0}}]);